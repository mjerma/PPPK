//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ishod7
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PPPK_ProjektEntities : DbContext
    {
        public PPPK_ProjektEntities()
            : base("name=PPPK_ProjektEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PutniNalog> PutniNalog { get; set; }
        public virtual DbSet<Ruta> Ruta { get; set; }
        public virtual DbSet<Servis> Servis { get; set; }
        public virtual DbSet<Vozac> Vozac { get; set; }
        public virtual DbSet<Vozilo> Vozilo { get; set; }
    
        public virtual int AddRuta(Nullable<int> sati, Nullable<double> koordinataA, Nullable<double> koordinataB, Nullable<int> putniNalogID, Nullable<int> prijedeniKilometri, Nullable<int> prosjecnaBrzina, Nullable<double> potrosenoGorivo)
        {
            var satiParameter = sati.HasValue ?
                new ObjectParameter("Sati", sati) :
                new ObjectParameter("Sati", typeof(int));
    
            var koordinataAParameter = koordinataA.HasValue ?
                new ObjectParameter("KoordinataA", koordinataA) :
                new ObjectParameter("KoordinataA", typeof(double));
    
            var koordinataBParameter = koordinataB.HasValue ?
                new ObjectParameter("KoordinataB", koordinataB) :
                new ObjectParameter("KoordinataB", typeof(double));
    
            var putniNalogIDParameter = putniNalogID.HasValue ?
                new ObjectParameter("PutniNalogID", putniNalogID) :
                new ObjectParameter("PutniNalogID", typeof(int));
    
            var prijedeniKilometriParameter = prijedeniKilometri.HasValue ?
                new ObjectParameter("PrijedeniKilometri", prijedeniKilometri) :
                new ObjectParameter("PrijedeniKilometri", typeof(int));
    
            var prosjecnaBrzinaParameter = prosjecnaBrzina.HasValue ?
                new ObjectParameter("ProsjecnaBrzina", prosjecnaBrzina) :
                new ObjectParameter("ProsjecnaBrzina", typeof(int));
    
            var potrosenoGorivoParameter = potrosenoGorivo.HasValue ?
                new ObjectParameter("PotrosenoGorivo", potrosenoGorivo) :
                new ObjectParameter("PotrosenoGorivo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRuta", satiParameter, koordinataAParameter, koordinataBParameter, putniNalogIDParameter, prijedeniKilometriParameter, prosjecnaBrzinaParameter, potrosenoGorivoParameter);
        }
    
        public virtual int AddVozac(string ime, string prezime, string brojMobitela, string brojVozackeDozvole, ObjectParameter vozacID)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var brojMobitelaParameter = brojMobitela != null ?
                new ObjectParameter("BrojMobitela", brojMobitela) :
                new ObjectParameter("BrojMobitela", typeof(string));
    
            var brojVozackeDozvoleParameter = brojVozackeDozvole != null ?
                new ObjectParameter("BrojVozackeDozvole", brojVozackeDozvole) :
                new ObjectParameter("BrojVozackeDozvole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVozac", imeParameter, prezimeParameter, brojMobitelaParameter, brojVozackeDozvoleParameter, vozacID);
        }
    
        public virtual int AddVozilo(string tip, string marka, Nullable<int> godinaProizvodnje, Nullable<int> prijedeniKilometri)
        {
            var tipParameter = tip != null ?
                new ObjectParameter("Tip", tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var markaParameter = marka != null ?
                new ObjectParameter("Marka", marka) :
                new ObjectParameter("Marka", typeof(string));
    
            var godinaProizvodnjeParameter = godinaProizvodnje.HasValue ?
                new ObjectParameter("GodinaProizvodnje", godinaProizvodnje) :
                new ObjectParameter("GodinaProizvodnje", typeof(int));
    
            var prijedeniKilometriParameter = prijedeniKilometri.HasValue ?
                new ObjectParameter("PrijedeniKilometri", prijedeniKilometri) :
                new ObjectParameter("PrijedeniKilometri", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVozilo", tipParameter, markaParameter, godinaProizvodnjeParameter, prijedeniKilometriParameter);
        }
    
        public virtual int CleanDB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CleanDB");
        }
    
        public virtual int DeletePutniNalog(Nullable<int> putniNalogID)
        {
            var putniNalogIDParameter = putniNalogID.HasValue ?
                new ObjectParameter("PutniNalogID", putniNalogID) :
                new ObjectParameter("PutniNalogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePutniNalog", putniNalogIDParameter);
        }
    
        public virtual int DeleteRuta(Nullable<int> iDRuta)
        {
            var iDRutaParameter = iDRuta.HasValue ?
                new ObjectParameter("IDRuta", iDRuta) :
                new ObjectParameter("IDRuta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRuta", iDRutaParameter);
        }
    
        public virtual int DeleteVozac(Nullable<int> vozacID)
        {
            var vozacIDParameter = vozacID.HasValue ?
                new ObjectParameter("VozacID", vozacID) :
                new ObjectParameter("VozacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVozac", vozacIDParameter);
        }
    
        public virtual int ExampleRecords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExampleRecords");
        }
    
        public virtual ObjectResult<GetAllDatabaseData_Result> GetAllDatabaseData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDatabaseData_Result>("GetAllDatabaseData");
        }
    
        public virtual ObjectResult<GetPutniNalogRute_Result> GetPutniNalogRute(Nullable<int> putniNalogID)
        {
            var putniNalogIDParameter = putniNalogID.HasValue ?
                new ObjectParameter("PutniNalogID", putniNalogID) :
                new ObjectParameter("PutniNalogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPutniNalogRute_Result>("GetPutniNalogRute", putniNalogIDParameter);
        }
    
        public virtual ObjectResult<GetPutniNalozi_Result> GetPutniNalozi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPutniNalozi_Result>("GetPutniNalozi");
        }
    
        public virtual ObjectResult<GetVozaci_Result> GetVozaci()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVozaci_Result>("GetVozaci");
        }
    
        public virtual ObjectResult<GetVozila_Result> GetVozila()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVozila_Result>("GetVozila");
        }
    
        public virtual ObjectResult<GetVozilo_Result> GetVozilo(Nullable<int> voziloID)
        {
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVozilo_Result>("GetVozilo", voziloIDParameter);
        }
    
        public virtual ObjectResult<SelectRutaData_Result> SelectRutaData(Nullable<int> iDRuta)
        {
            var iDRutaParameter = iDRuta.HasValue ?
                new ObjectParameter("IDRuta", iDRuta) :
                new ObjectParameter("IDRuta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRutaData_Result>("SelectRutaData", iDRutaParameter);
        }
    
        public virtual int UpdatePutniNalog(Nullable<int> putniNalogID, string naredbodavac, string brojNaloga, Nullable<int> vozacID, Nullable<int> voziloID, string polaziste, string odrediste, Nullable<int> brojDana, Nullable<System.DateTime> datumOtvaranja, Nullable<System.DateTime> datumZatvaranja)
        {
            var putniNalogIDParameter = putniNalogID.HasValue ?
                new ObjectParameter("PutniNalogID", putniNalogID) :
                new ObjectParameter("PutniNalogID", typeof(int));
    
            var naredbodavacParameter = naredbodavac != null ?
                new ObjectParameter("Naredbodavac", naredbodavac) :
                new ObjectParameter("Naredbodavac", typeof(string));
    
            var brojNalogaParameter = brojNaloga != null ?
                new ObjectParameter("BrojNaloga", brojNaloga) :
                new ObjectParameter("BrojNaloga", typeof(string));
    
            var vozacIDParameter = vozacID.HasValue ?
                new ObjectParameter("VozacID", vozacID) :
                new ObjectParameter("VozacID", typeof(int));
    
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            var polazisteParameter = polaziste != null ?
                new ObjectParameter("Polaziste", polaziste) :
                new ObjectParameter("Polaziste", typeof(string));
    
            var odredisteParameter = odrediste != null ?
                new ObjectParameter("Odrediste", odrediste) :
                new ObjectParameter("Odrediste", typeof(string));
    
            var brojDanaParameter = brojDana.HasValue ?
                new ObjectParameter("BrojDana", brojDana) :
                new ObjectParameter("BrojDana", typeof(int));
    
            var datumOtvaranjaParameter = datumOtvaranja.HasValue ?
                new ObjectParameter("DatumOtvaranja", datumOtvaranja) :
                new ObjectParameter("DatumOtvaranja", typeof(System.DateTime));
    
            var datumZatvaranjaParameter = datumZatvaranja.HasValue ?
                new ObjectParameter("DatumZatvaranja", datumZatvaranja) :
                new ObjectParameter("DatumZatvaranja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePutniNalog", putniNalogIDParameter, naredbodavacParameter, brojNalogaParameter, vozacIDParameter, voziloIDParameter, polazisteParameter, odredisteParameter, brojDanaParameter, datumOtvaranjaParameter, datumZatvaranjaParameter);
        }
    
        public virtual int UpdateRuta(Nullable<int> iDRuta, Nullable<int> sati, Nullable<double> koordinataA, Nullable<double> koordinataB, Nullable<int> putniNalogID, Nullable<int> prijedeniKilometri, Nullable<int> prosjecnaBrzina, Nullable<double> potrosenoGorivo)
        {
            var iDRutaParameter = iDRuta.HasValue ?
                new ObjectParameter("IDRuta", iDRuta) :
                new ObjectParameter("IDRuta", typeof(int));
    
            var satiParameter = sati.HasValue ?
                new ObjectParameter("Sati", sati) :
                new ObjectParameter("Sati", typeof(int));
    
            var koordinataAParameter = koordinataA.HasValue ?
                new ObjectParameter("KoordinataA", koordinataA) :
                new ObjectParameter("KoordinataA", typeof(double));
    
            var koordinataBParameter = koordinataB.HasValue ?
                new ObjectParameter("KoordinataB", koordinataB) :
                new ObjectParameter("KoordinataB", typeof(double));
    
            var putniNalogIDParameter = putniNalogID.HasValue ?
                new ObjectParameter("PutniNalogID", putniNalogID) :
                new ObjectParameter("PutniNalogID", typeof(int));
    
            var prijedeniKilometriParameter = prijedeniKilometri.HasValue ?
                new ObjectParameter("PrijedeniKilometri", prijedeniKilometri) :
                new ObjectParameter("PrijedeniKilometri", typeof(int));
    
            var prosjecnaBrzinaParameter = prosjecnaBrzina.HasValue ?
                new ObjectParameter("ProsjecnaBrzina", prosjecnaBrzina) :
                new ObjectParameter("ProsjecnaBrzina", typeof(int));
    
            var potrosenoGorivoParameter = potrosenoGorivo.HasValue ?
                new ObjectParameter("PotrosenoGorivo", potrosenoGorivo) :
                new ObjectParameter("PotrosenoGorivo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRuta", iDRutaParameter, satiParameter, koordinataAParameter, koordinataBParameter, putniNalogIDParameter, prijedeniKilometriParameter, prosjecnaBrzinaParameter, potrosenoGorivoParameter);
        }
    
        public virtual int UpdateVozac(Nullable<int> vozacID, string ime, string prezime, string brojMobitela, string brojVozackeDozvole)
        {
            var vozacIDParameter = vozacID.HasValue ?
                new ObjectParameter("VozacID", vozacID) :
                new ObjectParameter("VozacID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var brojMobitelaParameter = brojMobitela != null ?
                new ObjectParameter("BrojMobitela", brojMobitela) :
                new ObjectParameter("BrojMobitela", typeof(string));
    
            var brojVozackeDozvoleParameter = brojVozackeDozvole != null ?
                new ObjectParameter("BrojVozackeDozvole", brojVozackeDozvole) :
                new ObjectParameter("BrojVozackeDozvole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVozac", vozacIDParameter, imeParameter, prezimeParameter, brojMobitelaParameter, brojVozackeDozvoleParameter);
        }
    }
}
